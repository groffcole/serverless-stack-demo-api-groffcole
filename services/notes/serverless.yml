service: notes

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-1
  environment:
    tableName: notes
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  create:
    handler: api/create.main
    events:
      - http:
          path: notes
          method: post
          authorizer: aws_iam
  get:
    handler: api/get.main
    events:
      - http:
          path: notes/{id}
          method: get
          authorizer: aws_iam
  list:
    handler: api/list.main
    events:
      - http:
          path: notes
          method: get
          authorizer: aws_iam
  update:
    handler: api/update.main
    events:
      - http:
          path: notes/{id}
          method: put
          authorizer: aws_iam
  delete:
    handler: api/delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          authorizer: aws_iam




# Service Information
# service: notes
# stage: prod
# region: us-east-1
# stack: notes-prod
# resources: 32
# api keys:
#   None
# endpoints:
#   POST - https://9xakcudcjf.execute-api.us-east-1.amazonaws.com/prod/notes
#   GET - https://9xakcudcjf.execute-api.us-east-1.amazonaws.com/prod/notes/{id}
#   GET - https://9xakcudcjf.execute-api.us-east-1.amazonaws.com/prod/notes
#   PUT - https://9xakcudcjf.execute-api.us-east-1.amazonaws.com/prod/notes/{id}
#   DELETE - https://9xakcudcjf.execute-api.us-east-1.amazonaws.com/prod/notes/{id}
# functions:
#   create: notes-prod-create
#   get: notes-prod-get
#   list: notes-prod-list
#   update: notes-prod-update
#   delete: notes-prod-delete
# layers:
#   None